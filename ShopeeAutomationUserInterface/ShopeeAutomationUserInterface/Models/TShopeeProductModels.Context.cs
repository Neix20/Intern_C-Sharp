//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ShopeeAutomationUserInterface.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbJavaSeleniumShopeeProduct : DbContext
    {
        public dbJavaSeleniumShopeeProduct()
            : base("name=dbJavaSeleniumShopeeProduct")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TShopeeProduct> TShopeeProducts { get; set; }
    
        public virtual int NSP_TShopeeProduct_Delete(Nullable<int> product_transaction_id)
        {
            var product_transaction_idParameter = product_transaction_id.HasValue ?
                new ObjectParameter("product_transaction_id", product_transaction_id) :
                new ObjectParameter("product_transaction_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TShopeeProduct_Delete", product_transaction_idParameter);
        }
    
        public virtual int NSP_TShopeeProduct_Insert(string product_id, string product_name, string product_variety, Nullable<int> product_stock_quantity, Nullable<decimal> product_unit_price)
        {
            var product_idParameter = product_id != null ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(string));
    
            var product_nameParameter = product_name != null ?
                new ObjectParameter("product_name", product_name) :
                new ObjectParameter("product_name", typeof(string));
    
            var product_varietyParameter = product_variety != null ?
                new ObjectParameter("product_variety", product_variety) :
                new ObjectParameter("product_variety", typeof(string));
    
            var product_stock_quantityParameter = product_stock_quantity.HasValue ?
                new ObjectParameter("product_stock_quantity", product_stock_quantity) :
                new ObjectParameter("product_stock_quantity", typeof(int));
    
            var product_unit_priceParameter = product_unit_price.HasValue ?
                new ObjectParameter("product_unit_price", product_unit_price) :
                new ObjectParameter("product_unit_price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TShopeeProduct_Insert", product_idParameter, product_nameParameter, product_varietyParameter, product_stock_quantityParameter, product_unit_priceParameter);
        }
    
        public virtual ObjectResult<NSP_TShopeeProduct_SelectAll_Result> NSP_TShopeeProduct_SelectAll(Nullable<int> product_transaction_id)
        {
            var product_transaction_idParameter = product_transaction_id.HasValue ?
                new ObjectParameter("product_transaction_id", product_transaction_id) :
                new ObjectParameter("product_transaction_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NSP_TShopeeProduct_SelectAll_Result>("NSP_TShopeeProduct_SelectAll", product_transaction_idParameter);
        }
    
        public virtual ObjectResult<NSP_TShopeeProduct_SelectByNameAndVariety_Result> NSP_TShopeeProduct_SelectByNameAndVariety(string product_name, string product_variety)
        {
            var product_nameParameter = product_name != null ?
                new ObjectParameter("product_name", product_name) :
                new ObjectParameter("product_name", typeof(string));
    
            var product_varietyParameter = product_variety != null ?
                new ObjectParameter("product_variety", product_variety) :
                new ObjectParameter("product_variety", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NSP_TShopeeProduct_SelectByNameAndVariety_Result>("NSP_TShopeeProduct_SelectByNameAndVariety", product_nameParameter, product_varietyParameter);
        }
    
        public virtual ObjectResult<NSP_TShopeeProduct_SelectByPK_Result> NSP_TShopeeProduct_SelectByPK(Nullable<int> product_transaction_id)
        {
            var product_transaction_idParameter = product_transaction_id.HasValue ?
                new ObjectParameter("product_transaction_id", product_transaction_id) :
                new ObjectParameter("product_transaction_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NSP_TShopeeProduct_SelectByPK_Result>("NSP_TShopeeProduct_SelectByPK", product_transaction_idParameter);
        }
    
        public virtual int NSP_TShopeeProduct_Update(Nullable<int> product_transaction_id, string product_id, string product_name, string product_variety, Nullable<int> product_stock_quantity, Nullable<decimal> product_unit_price)
        {
            var product_transaction_idParameter = product_transaction_id.HasValue ?
                new ObjectParameter("product_transaction_id", product_transaction_id) :
                new ObjectParameter("product_transaction_id", typeof(int));
    
            var product_idParameter = product_id != null ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(string));
    
            var product_nameParameter = product_name != null ?
                new ObjectParameter("product_name", product_name) :
                new ObjectParameter("product_name", typeof(string));
    
            var product_varietyParameter = product_variety != null ?
                new ObjectParameter("product_variety", product_variety) :
                new ObjectParameter("product_variety", typeof(string));
    
            var product_stock_quantityParameter = product_stock_quantity.HasValue ?
                new ObjectParameter("product_stock_quantity", product_stock_quantity) :
                new ObjectParameter("product_stock_quantity", typeof(int));
    
            var product_unit_priceParameter = product_unit_price.HasValue ?
                new ObjectParameter("product_unit_price", product_unit_price) :
                new ObjectParameter("product_unit_price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TShopeeProduct_Update", product_transaction_idParameter, product_idParameter, product_nameParameter, product_varietyParameter, product_stock_quantityParameter, product_unit_priceParameter);
        }
    }
}
